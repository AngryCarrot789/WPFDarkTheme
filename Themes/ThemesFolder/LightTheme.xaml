<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:PSWRDMGR.Themes">

    <SolidColorBrush x:Key="BackgroundColour"  Color="White" />

    <SolidColorBrush x:Key="WindowBorderColour"  Color="WhiteSmoke" />
    <SolidColorBrush x:Key="WindowTitleColour"  Color="WhiteSmoke" />

    <SolidColorBrush x:Key="ContainerBackground" Color="WhiteSmoke"/>
    <SolidColorBrush x:Key="ContainerBorder" Color="#FFE1E1E1"/>

    <SolidColorBrush x:Key="ControlDarkerBackground"  Color="#FFC8C8C8" />
    <SolidColorBrush x:Key="ControlDarkerBorderBrush" Color="#FF646464" />

    <SolidColorBrush x:Key="ControlDefaultBackground"  Color="#FFDDDDDD" />
    <SolidColorBrush x:Key="ControlDefaultBorderBrush" Color="#FF848484" />
    <SolidColorBrush x:Key="ControlDefaultForeground"  Color="#FF050505" />

    <SolidColorBrush x:Key="ControlBrightDefaultBackground"  Color="#FFE8E8E8" />
    <SolidColorBrush x:Key="ControlBrightDefaultBorderBrush"  Color="#FFB4B4B4" />

    <SolidColorBrush x:Key="ControlDisabledBackground"  Color="#FFF4F4F4" />
    <SolidColorBrush x:Key="ControlDisabledBorderBrush"  Color="#FFADB2B5" />

    <SolidColorBrush x:Key="ControlMouseOverBackground"  Color="#FFBEE6FD" />
    <SolidColorBrush x:Key="ControlMouseOverBorderBrush" Color="#FF3C7FB1"/>
    <SolidColorBrush x:Key="ControlSelectedBackground" Color="#FFC4E5F6"/>
    <SolidColorBrush x:Key="ControlSelectedBorderBrush" Color="#FF2C628B"/>
    <SolidColorBrush x:Key="ControlSelectedMouseOverBackground" Color="#FFBEE6FD"/>
    <SolidColorBrush x:Key="ControlSelectedMouseOverBorderBrush" Color="#FF3C7FB1"/>

    <SolidColorBrush x:Key="ControlGlythColour"  Color="#FAFAFA" />
    <SolidColorBrush x:Key="ControlMouseOverGlythColour"  Color="#c9c9c9" />
    <SolidColorBrush x:Key="ControlSelectedGlythColour"  Color="#bfbfbf" />
    <SolidColorBrush x:Key="ControlDisabledGlythColour"  Color="#FF838383" />

    <SolidColorBrush x:Key="ControlPrimarySpecialColour"  Color="#FF0B63CD" />
    <SolidColorBrush x:Key="ControlSecondarySpecialColour" Color="#FFD86413"/>

    <ControlTemplate x:Key="WindowTemplateKey" TargetType="{x:Type Window}">
        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
            <Grid>
                <AdornerDecorator>
                    <ContentPresenter/>
                </AdornerDecorator>
                <ResizeGrip x:Name="WindowResizeGrip" HorizontalAlignment="Right" IsTabStop="false" Visibility="Collapsed" VerticalAlignment="Bottom"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ResizeMode" Value="CanResizeWithGrip"/>
                    <Condition Property="WindowState" Value="Normal"/>
                </MultiTrigger.Conditions>
                <Setter Property="Visibility" TargetName="WindowResizeGrip" Value="Visible"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="MainWindowStyle" TargetType="{x:Type Window}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        <Setter Property="Background" Value="{StaticResource BackgroundColour}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <AdornerDecorator>
                            <ContentPresenter/>
                        </AdornerDecorator>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ResizeMode" Value="CanResizeWithGrip">
                <Setter Property="Template" Value="{StaticResource WindowTemplateKey}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CustomWindowStyle" TargetType="{x:Type Window}">
        <Setter Property="BorderBrush" Value="{StaticResource ContainerBackground}" />
        <Setter Property="Background" Value="{StaticResource BackgroundColour}" />
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome CornerRadius="2" 
                              CaptionHeight="39"
                              GlassFrameThickness="2"/>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="7,39,7,7">
                            <AdornerDecorator>
                                <ContentPresenter />
                            </AdornerDecorator>
                        </Border>

                        <Grid Height="32"
                              Background="{StaticResource WindowTitleColour}"
                            VerticalAlignment="Top" Margin="7,7,7,0">

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="32"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <Image HorizontalAlignment="Left" VerticalAlignment="Stretch" Width="20" Margin="6" Source="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Icon}"  />
                            <TextBlock Margin="5,0,0,0"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Left"
                                       FontSize="16"
                                       Foreground="{DynamicResource ControlDefaultForeground}"
                                       Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Title}"   
                                       Grid.Column="1"/>


                            <StackPanel Orientation="Horizontal"
                                        Grid.Column="2">
                                <Button x:Name="btnMinimize"
                                        Background="Transparent"
                                        BorderBrush="Transparent"
                                        Width="50"
                                        VerticalContentAlignment="Bottom"
                                        WindowChrome.IsHitTestVisibleInChrome="True" Command="{Binding MinimizeWindowCommand}">
                                    <Image Source="/Resources/minimizeWindow.png" Margin="7"/>
                                </Button>

                                <Button x:Name="btnRestore"
                                        Background="Transparent"
                                        BorderBrush="Transparent"
                                        Width="50"
                                        WindowChrome.IsHitTestVisibleInChrome="True" Command="{Binding MaximizeRestoreCommand}">
                                    <Image Source="/Resources/maximizeRestoreWindow.png" Margin="7"/>
                                </Button>
                                <Button x:Name="btnClose"
                                        Background="Transparent"
                                        BorderBrush="Transparent"
                                        Template="{DynamicResource CloseWindowButton}"
                                        Width="50"
                                        WindowChrome.IsHitTestVisibleInChrome="True" Command="{Binding CloseWindowCommand}">
                                    <Image Source="/Resources/closeWindow.png" Margin="7"/>
                                </Button>

                            </StackPanel>
                        </Grid>

                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="DropDownMenuItemTemplate" TargetType="{x:Type MenuItem}">
        <Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
            <Grid Margin="-1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="22" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                    <ColumnDefinition Width="13"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="30"/>
                    <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                    <ColumnDefinition Width="20"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
                <Border x:Name="GlyphPanel" BorderBrush="#FF26A0DA" BorderThickness="1" Background="#3D26A0DA" ClipToBounds="False" HorizontalAlignment="Center" Height="22" Margin="-1,0,0,0" Visibility="Hidden" VerticalAlignment="Center" Width="22">
                    <Path x:Name="Glyph" Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z" Fill="#FF212121" FlowDirection="LeftToRight" Height="11" Width="10"/>
                </Border>
                <ContentPresenter x:Name="menuHeaderContainer" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="2" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" HorizontalAlignment="Left" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                <TextBlock x:Name="menuGestureText" Grid.Column="4" Margin="{TemplateBinding Padding}" Opacity="0.7" Text="{TemplateBinding InputGestureText}" VerticalAlignment="Center"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" TargetName="templateRoot" Value="#3D26A0DA"/>
                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF26A0DA"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="#FF707070"/>
                <Setter Property="Fill" TargetName="Glyph" Value="#FF707070"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsHighlighted" Value="True"/>
                    <Condition Property="IsEnabled" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" TargetName="templateRoot" Value="#0A000000"/>
                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#21000000"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="MenuItemTemplate" TargetType="{x:Type MenuItem}">
        <Border x:Name="templateRoot"
            BorderBrush="{TemplateBinding BorderBrush}" 
            BorderThickness="{TemplateBinding BorderThickness}" 
            Background="{TemplateBinding Background}"
            SnapsToDevicePixels="True">
            <Grid x:Name="Grid" VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon" 
                    Content="{TemplateBinding Icon}"
                    ContentSource="Icon" HorizontalAlignment="Center"
                    Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                    VerticalAlignment="Center" Width="16"/>
                <Path x:Name="GlyphPanel" Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z" 
                    Fill="{TemplateBinding Foreground}" 
                    FlowDirection="LeftToRight" Margin="3"
                    Visibility="Collapsed" VerticalAlignment="Center"/>
                <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" 
                    Content="{TemplateBinding Header}" Grid.Column="1"
                    ContentStringFormat="{TemplateBinding HeaderStringFormat}" 
                    ContentSource="Header" Margin="{TemplateBinding Padding}" 
                    RecognizesAccessKey="True" 
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                <Popup x:Name="PART_Popup"
                    AllowsTransparency="True" 
                    Focusable="False" 
                    IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                    PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" 
                    Placement="Bottom">
                    <Border x:Name="SubMenuBorder" BorderBrush="{StaticResource ControlDefaultBorderBrush}" 
                        BorderThickness="2" Background="{StaticResource ControlDefaultBorderBrush}" Padding="2">
                        <ScrollViewer x:Name="SubMenuScrollViewer" 
                            Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                            <Grid x:Name="Grid1" RenderOptions.ClearTypeHint="Enabled">
                                <Canvas x:Name="Canvas" HorizontalAlignment="Left" Height="0" 
                                    VerticalAlignment="Top" Width="0">
                                    <Rectangle x:Name="OpaqueRect" 
                                        Fill="{Binding Background, ElementName=SubMenuBorder}" 
                                        Height="{Binding ActualHeight, ElementName=SubMenuBorder}"
                                        Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                </Canvas>
                                <ItemsPresenter x:Name="ItemsPresenter" 
                                    KeyboardNavigation.DirectionalNavigation="Cycle" 
                                    Grid.IsSharedSizeScope="True" 
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                    KeyboardNavigation.TabNavigation="Cycle"/>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" TargetName="templateRoot"  Value="{StaticResource ControlMouseOverBackground}"/>
                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ControlMouseOverBackground}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="#FF707070"/>
                <Setter Property="Fill" TargetName="GlyphPanel" Value="#FF707070"/>
            </Trigger>
            <Trigger Property="CanContentScroll" SourceName="SubMenuScrollViewer" Value="False">
                <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <SolidColorBrush x:Key="Menu.Static.Background" Color="#FFF0F0F0"/>
    <Style TargetType="{x:Type Menu}">
        <Setter Property="Background" Value="{StaticResource Menu.Static.Background}"/>
        <Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}"/>
        <Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}"/>
        <Setter Property="FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}"/>
        <Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>